package spring_with_netty.netty.util;

//import com.mongodb.async.SingleResultCallback;
import io.netty.buffer.ByteBuf;
import io.netty.buffer.Unpooled;
import io.netty.channel.socket.DatagramPacket;
import io.netty.util.ReferenceCountUtil;
//import org.bson.Document;
import spring_with_netty.netty.RadarServer;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * @Author: Wu
 * @Date: 2019/3/24 9:46 AM
 */
public class DataProcessor {
    //private MongoDB mongodb;

//    public void setMongodb(MongoDB mongodb){
//        this.mongodb = mongodb;
//    }

//    SingleResultCallback<Void> callback;

    public int string2Int(String string){
        return  Integer.parseInt(string, 16);
    }


    /***
     * 将bytes[] 数组中的（四字节）数据转为float
     * @param data
     * @param start
     * @param length
     * @return
     */
    public float bytes2Float(byte[] data, int start, int length){


        byte[] parseByte = new byte[4];
        System.arraycopy(data, start, parseByte, 0, length);

        ByteBuffer buf=ByteBuffer.allocateDirect(4); //无额外内存的直接缓存
        buf=buf.order(ByteOrder.LITTLE_ENDIAN);//默认大端，小端用这行
        buf.put(parseByte);
        buf.rewind();
        return buf.getFloat();
    }

    public String bytes2String(byte[] bytes){
        StringBuilder buf = new StringBuilder(bytes.length * 2);
        for(byte b : bytes) { // 使用String的format方法进行转换
            buf.append(String.format("%02x", new Integer(b & 0xff)));
        }
        return buf.toString();
    }


    public void parse(ByteBuf in){
        if(!in.hasArray()){
            int len =  in.readableBytes();
            byte[] bytes = new byte[len];
            in.getBytes(0, bytes);
            String hex_string = bytes2String(bytes);
            on_Data(hex_string);
        } else {
            byte[] bytes = in.array();
            String hex_string = bytes2String(bytes);
            on_Data(hex_string);
        }
    }

    static byte[] firstPacket; //暂存第一个数据包

    /**
     * UDP服务端 解析函数
     * @param packet
     */
    public void parse(DatagramPacket packet){
        ByteBuf buf = (ByteBuf) packet.copy().content();
        byte[] pack = new byte[buf.readableBytes()]; //1024字节
        buf.readBytes(pack);

        if (pack[0]==1&&pack[1]==0&&pack[2]==1&&pack[3]==0){
            this.firstPacket = new byte[1200];
            System.arraycopy(pack, 4, this.firstPacket, 0,1200);
        } else if (pack[0]==2&&pack[1]==0&&pack[2]==2&&pack[3]==0){
            if (this.firstPacket == null){
                return;
            }
            byte[] pack2 = new byte[1200];
            System.arraycopy(pack, 4, pack2, 0, 1200);
            byte[] data = new byte[2400];
            System.arraycopy(this.firstPacket, 0, data, 0, 1200);
            System.arraycopy(pack2, 0, data, 1200, 1200);
            this.firstPacket = null;

            float selfcheck = bytes2Float(data, 0, 4);
            float type = bytes2Float(data, 4, 4);
            float version = bytes2Float(data, 8, 4);
            float curtime = bytes2Float(data, 12, 4); //单位毫秒

            int start = 16;
            for(int i = 0; bytes2Float(data, start + i*20, 4) != 0; i++){ //bytes2Float(data, start + i*20, 4) != 0
                float targetID = bytes2Float(data, start + i*20, 4);
                float x = bytes2Float(data, start + i*20 + 4, 4);
                float y = bytes2Float(data, start + i*20 + 8, 4);
                float v = bytes2Float(data, start + i*20 + 12, 4); //径向速度
                float acc = bytes2Float(data, start + i*20 + 16, 4); //加速度

                String message = "{\"dispatch\":\"workers\", \"emit\":{\"event\":\"dot\", \"args\": {\"x\":" + x + ", \"y\":" + y +
                        ", \"v\":" + v + ", \"acc\":" + acc + ", \"targetID\":" + targetID + ", \"selfcheck\":" + selfcheck +
                        ", \"type\":" + type + ", \"version\":" + version +
                        ", \"curtime\":" + curtime +  "}}}";
                ForwardingThread.send2WebSocket(Unpooled.wrappedBuffer(message.getBytes()));
            }

            //00030003c0a80102ffffffff01000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
            //00030003c0a80102ffffffff
            //00030003c0a80102ffffffff
            //00030003c0a80102ffffffff
            //00030003c0a80102ffffffff
        }else if(bytes2String(pack).substring(0, 8).equals(00030003)){
//            String hex_string = bytes2String(pack);
//            String mac = hex_string.substring();
//            String ip = hex_string.substring();
//            RadarServer_V1.LOG.info("Radar Connected!");
//            RadarServer_V1.LOG.info("Radar MAC address:  Radar IP address: ");
        }
//        System.out.println(bytes2String(pack));

        ReferenceCountUtil.release(buf);
    }


    public void on_Data(String hex_string){

        if (hex_string.substring(0, 4).equals("55aa")){
//            System.out.println("合法报头");
        } else{
            RadarServer.LOG.error("Unknown Header");
        }

        if(hex_string.substring(4, 6).equals("12")){
//            System.out.println("上传指令");
            on_Target_Data(hex_string);
        }
    }

    public void on_Target_Data(String hex_string){
        int target_count = string2Int(hex_string.substring(10, 12));

//        if(target_count != 0){
//            System.out.println("非0目标");
//        }
        for(int i = 0; i < target_count; i++){
            int start = 12 + 34 * i;
            int end = start +  32;

            double distance = string2Int(hex_string.substring(start, start + 8)) * 0.01; //径向距离
            double angle= string2Int(hex_string.substring(start + 8, start + 12)) * 0.01; //方位角
            double y = string2Int(hex_string.substring(start + 12, start + 20)) * 0.01; //Y轴距离
            double x = string2Int(hex_string.substring(start + 20, start + 28)) * 0.01; //X轴距离

            double _angle = angle * 1 - 25;
            double _distance = distance * 1 + 0;

            double rad = _angle * 0.0174533;
            double _x = _distance * Math.sin(rad);
            double _y = _distance * Math.cos(rad);

            String message = "{\"dispatch\":\"workers\", \"emit\":{\"event\":\"dot\", \"args\": {\"x\":" + _x + ", \"y\":" + _y + "}}}";

            ForwardingThread.send2WebSocket(Unpooled.wrappedBuffer(message.getBytes()));
//            数据库相关操作
//            String date = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
//            Document doc = new Document("time", date)
//                    .append("x", _x)
//                    .append("y", _y)
//                    .append("id", i);
//
//            mongodb.collection.insertOne(doc, new SingleResultCallback<Void>() {
//                public void onResult(final Void result, final Throwable t) {
//                    RadarServer.LOG.info("Document inserted!");
//                }});

        }

        //return "{'dispatch': 'workers', 'emit': {'event': 'transection', 'args': {'area': 'A8', 'time': '2019-03-24 00:10:29.272017', 'action': 1}}}\n";
    }




    public static void main(String[] args){
        DataProcessor p = new DataProcessor();
        String hex_string = "55aa1201ff02000002000a8d000001ff0000001a0044ec00000694116b0000065e000001a80057e
        p.on_Target_Data(hex_string);
    }
}
