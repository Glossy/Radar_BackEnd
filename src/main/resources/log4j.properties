log4j.rootLogger =DEBUG,Console,Server


#打印所有日志到控制台
log4j.appender.Console=org.apache.log4j.ConsoleAppender
#如果想要打印所有日志，则设置的为TRACE，如果只想要看到info以上级别的日志，则可以设置为INFO。
log4j.appender.Console.Threshold=INFO
log4j.appender.Console.ImmediateFlush=true
#控制台输出为System.out，也可以为System.err，这样错误的信息会显示红色
log4j.appender.Console.Target=System.out
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss.SSS}  %p --- [%30t] %30c : %m%n

#org.apache.log4j.ConsoleAppender（控制台）
#org.apache.log4j.FileAppender（文件）
#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
#info级别日志的，每天产生一个日志文件
log4j.appender.Server = org.apache.log4j.DailyRollingFileAppender
#打印日志到logs文件夹下面的info-log文件里面
log4j.appender.Server.File = ./src/main/resources/Log.log
#按天命名每天的日志文件
log4j.appender.Server.DatePattern='.'yyyy-MM-dd
log4j.appender.Server.Threshold = TRACE
log4j.appender.Server.layout = org.apache.log4j.PatternLayout
log4j.appender.Server.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss.SSS}  %p --- [%30t] %30c : %m%n
#%logger{36} %d{HH:mm:ss.SSS} %-5level [%t] [%l] - %m%n
#log4j.appender.ForwardingServer.filter.F1=org.apache.log4j.varia.LevelRangeFilter
#这里是设置info日志过滤器的最小日志级别和最大日志级别，这样info-log就会过滤调除info以外的其他日志。
#log4j.appender.ForwardingServer.filter.F1.LevelMin=INFO
#log4j.appender.ForwardingServer.filter.F1.LevelMax=INFO

