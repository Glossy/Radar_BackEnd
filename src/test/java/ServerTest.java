import gnu.io.SerialPort;
import io.netty.buffer.Unpooled;
import org.junit.Test;
import spring_with_netty.netty.ForwardingServer;
import spring_with_netty.netty.TCPRadarServer;
import spring_with_netty.netty.UDPRadarServer;
import spring_with_netty.netty.util.DataProcessor;
import spring_with_netty.netty.util.ForwardingThread;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

/**
 * @Author: Wu
 * @Date: 2019/8/1 9:21 PM
 */
public class ServerTest {

    @Test
    public void WebSocketTest(){
        String message = "{'dispatch': 'workers', 'emit': {'event': 'transection', 'args': {'area': 'A8', 'time': '2019-03-24 00:10:29.272017', 'action': 1}}}\n";
        ForwardingThread.send2WebSocket(Unpooled.wrappedBuffer(message.getBytes()));
    }


    @Test
    public void FordwardServerTest(){
        ForwardingServer server = new ForwardingServer();
        server.run();
    }

    @Test
    public void TCPRadarServerTest(){
        TCPRadarServer server = new TCPRadarServer();
        server.start();
    }

    @Test
    public void UDPRadarServerTest(){
        UDPRadarServer server = new UDPRadarServer();
        server.start();
    }

    @Test
    public void DataProcessorTest() throws Exception{
        DataProcessor p = new DataProcessor();
        String hex_string = "55aa1201ff02000002000a8d000001ff0000001a0044ec00000694116b0000065e000001a80057e
        String hex_string1 = "020104030605080704000002a002000042160a006706000043d132e9040000000300000000000000010000003400000004000900030000008e06ceff2c000000fd0000006d0022f0590f000003000000da04bdff00000000fd0000004e00cc0d3c11000002000000000200007d7baa86218b178ddf895986e77c0b77da70f768c75d825a9d5464518042f7451b465e54295fb566aa65cb5c81594255055353537a4d324cfc4cbd4b9d48f24247442647254a9f50df507e4fe449be45e7457c40073ed13e854386443b42c5452843fb45df4483439143db447042a03fcd432d47b6469c422d48d94956442144ee47bf44e44444444b42a541af3c363da0427e4424437c3e0b42c1414c416240f33d8a41c0442c43c244ce42c0406642a4441441043f11440142f644aa450444d6412444014393438a463d4568452343ce4152404d41ca3fa539ba3d4d3ef73e933f123c663bc33a6b424343cf421942673e54391540214102433b4371417b432b3f873d1742e1427741353c763dde440344c2408e3dc73da1446144c83f653f93417c419544d34030456a458441f53cca3e9443aa464b469f437a42c83f8343d63e0c42373c3f41763f0d3e743f2a407a3d60419e40d83e633f88433a44f141eb446c456a40dc4074424443a1410641953d1e42e741503d9444d243ef414242e73d5b3b85409b42d4415f40a4416141903ee23fd2419943d242bc3fd43cbc4226455e40de3ee04002421e428a3e5a40014428418640c341c13e6d414e4198411b3e2f3d903d3039463fcc415e3fbc40dc403b41a64236427f3c9439583c7d3a5c3ad73dcc37bf37913a8e3aa23bc9423d4c7a54f15abd65d66add6d6d6dd56806000000180000009b0e0000581d0000c6490100ba0e000003000000040000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f020104030605080704000002a002000042160a0068060000d15ac6ec040000000300000000000000010000003400000004000900030000008e06ceff2c000000fd0000006d0022f0590f000003000000db04bdff00000000fd0000004e00cc0d3c11000002000000000200007c7ba886218b178de0895086fc7c2b77d2702769855f55594d532d500847e44308461452025feb66bd65615cd3584b566b50e5506f51e64ea64b0c49114697461d44ec419e47854fa953d850eb4a75461d42a73f4f4716475346f047d3437c488e47e9410c411f415441c13f9d409a3fa9421446c448e6421444a046db44fc44e245284329438a424b414845a0408d40d63bb84447415e3f7042843fc03b603dd140403e983c1840af433044244318449c43a9428b40b33dd5404a40b03edc419441ac3e723ee63ef642fe42ee42dd3e3041453ecf3dcc3b35405d3ec44054422e446d3fbf4268444440ee3db443f

        List<Object> returnList = p.on_V2Data(hex_string1.substring(0,80));
        long length = (long)returnList.get(0);
        long targetNum = (long)returnList.get(1);
        String message = (String)returnList.get(2);

        int l = Integer.parseInt(String.valueOf((length-36)*2));
        byte[] databuffer = new byte[l];
        p.on_V2Target_Data(p.bytes2String(databuffer), targetNum, message);
    }

    @Test
    public void sendFileToComPort() {
        File file = new File("/Users/wutiancheng/Documents/项目/雷达/77G _Radar/radar.cfg");
        ArrayList<String> arrayList = new ArrayList<String>();
        try {
            FileReader fr = new FileReader(file.getPath());
            BufferedReader bf = new BufferedReader(fr);
            String str;
            // 按行读取字符串
            while ((str = bf.readLine()) != null) {
                str = str.trim();
                arrayList.add(str + '\n');
            }
            bf.close();
            fr.close();
            byte[] line;
            for(Iterator iterator = arrayList.iterator(); iterator.hasNext();){
                String lines = (String)iterator.next();
                char[] array = (lines.trim() + "\n").toCharArray();
                System.out.println(array);
                System.out.println(lines);
                line = (lines.trim()+"\n").getBytes(StandardCharsets.UTF_8);
                System.out.println(new String(line,StandardCharsets.UTF_8));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    @Test
    public void javalibrarypath(){
        System.out.println(System.getProperty("java.library.path"));
    }

}
